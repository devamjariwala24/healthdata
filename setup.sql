-- setup.sql
-- Snowflake setup: database, schema, table, tags, roles, views

-- -------------------------
-- Create database and schema
-- -------------------------
CREATE OR REPLACE DATABASE HEALTH_GOV_DB;
USE DATABASE HEALTH_GOV_DB;

CREATE OR REPLACE SCHEMA CDC_SCHEMA;
USE SCHEMA CDC_SCHEMA;

-- -------------------------
-- Create base table (all CSV columns)
-- -------------------------
CREATE OR REPLACE TABLE CDI_DATA (
    YEARSTART STRING,
    YEAREND STRING,
    LOCATIONABBR STRING,
    LOCATIONDESC STRING,
    DATASOURCE STRING,
    TOPIC STRING,
    QUESTION STRING,
    RESPONSE STRING,
    DATAVALUEUNIT STRING,
    DATAVALUETYPE STRING,
    DATAVALUE STRING,
    DATAVALUEALT STRING,
    DATAVALUEFOOTNOTESYMBOL STRING,
    DATAVALUEFOOTNOTE STRING,
    LOWCONFIDENCELIMIT STRING,
    HIGHCONFIDENCELIMIT STRING,
    STRATIFICATIONCATEGORY1 STRING,
    STRATIFICATION1 STRING,
    STRATIFICATIONCATEGORY2 STRING,
    STRATIFICATION2 STRING,
    STRATIFICATIONCATEGORY3 STRING,
    STRATIFICATION3 STRING,
    GEOLOCATION STRING,
    LOCATIONID STRING,
    TOPICID STRING,
    QUESTIONID STRING,
    RESPONSEID STRING,
    DATAVALUETYPEID STRING,
    STRATIFICATIONCATEGORYID1 STRING,
    STRATIFICATIONID1 STRING,
    STRATIFICATIONCATEGORYID2 STRING,
    STRATIFICATIONID2 STRING,
    STRATIFICATIONCATEGORYID3 STRING,
    STRATIFICATIONID3 STRING
);

-- -------------------------
-- Column metadata (simple catalog)
-- -------------------------
CREATE OR REPLACE TABLE COLUMN_TAGS (
    TABLE_NAME STRING,
    COLUMN_NAME STRING,
    SENSITIVITY_LEVEL STRING
);

-- Clear old tags
DELETE FROM COLUMN_TAGS WHERE TABLE_NAME='CDI_DATA';

-- Example tagging: adjust as needed
INSERT INTO COLUMN_TAGS (TABLE_NAME, COLUMN_NAME, SENSITIVITY_LEVEL) VALUES
('CDI_DATA','DATAVALUE','SENSITIVE'),
('CDI_DATA','DATAVALUEALT','SENSITIVE'),
('CDI_DATA','GEOLOCATION','SENSITIVE'),
('CDI_DATA','DATAVALUEFOOTNOTE','SENSITIVE'),
('CDI_DATA','LOWCONFIDENCELIMIT','SENSITIVE'),
('CDI_DATA','HIGHCONFIDENCELIMIT','SENSITIVE'),
('CDI_DATA','YEARSTART','PUBLIC'),
('CDI_DATA','YEAREND','PUBLIC'),
('CDI_DATA','LOCATIONABBR','PUBLIC'),
('CDI_DATA','LOCATIONDESC','PUBLIC'),
('CDI_DATA','DATASOURCE','PUBLIC'),
('CDI_DATA','TOPIC','PUBLIC'),
('CDI_DATA','QUESTION','PUBLIC'),
('CDI_DATA','RESPONSE','PUBLIC'),
('CDI_DATA','DATAVALUEUNIT','PUBLIC'),
('CDI_DATA','DATAVALUETYPE','PUBLIC'),
('CDI_DATA','STRATIFICATIONCATEGORY1','PUBLIC'),
('CDI_DATA','STRATIFICATION1','PUBLIC'),
('CDI_DATA','STRATIFICATIONCATEGORY2','PUBLIC'),
('CDI_DATA','STRATIFICATION2','PUBLIC'),
('CDI_DATA','STRATIFICATIONCATEGORY3','PUBLIC'),
('CDI_DATA','STRATIFICATION3','PUBLIC'),
('CDI_DATA','LOCATIONID','PUBLIC'),
('CDI_DATA','TOPICID','PUBLIC'),
('CDI_DATA','QUESTIONID','PUBLIC'),
('CDI_DATA','RESPONSEID','PUBLIC'),
('CDI_DATA','DATAVALUETYPEID','PUBLIC'),
('CDI_DATA','STRATIFICATIONCATEGORYID1','PUBLIC'),
('CDI_DATA','STRATIFICATIONID1','PUBLIC'),
('CDI_DATA','STRATIFICATIONCATEGORYID2','PUBLIC'),
('CDI_DATA','STRATIFICATIONID2','PUBLIC'),
('CDI_DATA','STRATIFICATIONCATEGORYID3','PUBLIC'),
('CDI_DATA','STRATIFICATIONID3','PUBLIC');

-- -------------------------
-- Roles
-- -------------------------
CREATE ROLE IF NOT EXISTS DATA_STEWARD;
CREATE ROLE IF NOT EXISTS ANALYST;
CREATE ROLE IF NOT EXISTS PUBLIC_USER;

-- Grant roles to current user (for testing)
GRANT ROLE DATA_STEWARD TO USER CURRENT_USER();
GRANT ROLE ANALYST TO USER CURRENT_USER();
GRANT ROLE PUBLIC_USER TO USER CURRENT_USER();

-- -------------------------
-- Full (unmasked) view
-- -------------------------
CREATE OR REPLACE VIEW CDI_DATA_FULL AS
SELECT * FROM CDI_DATA;

-- -------------------------
-- Masked view
-- -------------------------
CREATE OR REPLACE SECURE VIEW CDI_DATA_MASKED AS
SELECT
  YEARSTART,
  YEAREND,
  LOCATIONABBR,
  LOCATIONDESC,
  TOPIC,
  QUESTION,
  RESPONSE,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN DATAVALUE
    ELSE NULL
  END AS DATAVALUE,
  DATAVALUEUNIT,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN STRATIFICATIONCATEGORY1
    ELSE 'MASKED'
  END AS STRATIFICATIONCATEGORY1,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN STRATIFICATION1
    ELSE 'MASKED'
  END AS STRATIFICATION1,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN STRATIFICATIONCATEGORY2
    ELSE 'MASKED'
  END AS STRATIFICATIONCATEGORY2,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN STRATIFICATION2
    ELSE 'MASKED'
  END AS STRATIFICATION2,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN STRATIFICATIONCATEGORY3
    ELSE 'MASKED'
  END AS STRATIFICATIONCATEGORY3,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN STRATIFICATION3
    ELSE 'MASKED'
  END AS STRATIFICATION3,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN GEOLOCATION
    ELSE 'MASKED'
  END AS GEOLOCATION,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN DATAVALUEFOOTNOTE
    ELSE 'MASKED'
  END AS DATAVALUEFOOTNOTE,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN LOWCONFIDENCELIMIT
    ELSE NULL
  END AS LOWCONFIDENCELIMIT,
  CASE
    WHEN CURRENT_ROLE() IN ('ACCOUNTADMIN','DATA_STEWARD') THEN HIGHCONFIDENCELIMIT
    ELSE NULL
  END AS HIGHCONFIDENCELIMIT
FROM CDI_DATA;
